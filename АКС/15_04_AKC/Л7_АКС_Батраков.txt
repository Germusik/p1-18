Тест 1:
1.Согласно принципам Фон-Неймана программы и данные хранятся в единой памяти:
  Однородность памяти это ключевое отличие архетектуры Фон-Неймана от других архетектур,оно заключается в том, что в системе существует общая память для команд и данных,
  а следовательно можно в любую ячейку памяти записать как машинную инструкцию, так и какие-то данные. 
2.Устройство ввода-вывода предназначено для выполнения арифметических операций
3.В вычислительной системе может быть больше одной шины: 
  Компоненты вычислительной системы соеденены между собой шинами, это могут быть шины либо между устройствами, либо какая-то общая шина к которой присоеденены сразу несколько устройств
4.Текущая (следующая) исполняемая команда хранится в специальном регистре процессора
5.Адрес текущей (следующей) исполняемой команды хранится в специальном регистре процессора:

Тест 2:
1.Тактовый генератор задает общее время в системе:
  Электронные компоненты входящие в состав вычислительной системы обычно взаимодействуют друг с другом, а значит они должны быть синхронизированы. 
2.Скорость вычислений не зависит от частоты импульсов тактового генератора
3.Тактовый генератор хранит текущее время и дату
4.Некоторые компоненты компьютера меняют свое состояние в момент прихода импульса от тактового генератора:
  В момент прихода импульса от тактового генератора некоторые программы либо реализуют свои функции, либо же меняют своё состояние в момент прихода импульса.

Тест 3:
1.На архитектуре Intel команды IN, OUT -- команды ввода-вывода через порты:
  В процессорах интел существуют специальные команды для организации ввода/вывода, in - ввод из порта и out - вывод в порт
2.По одному и тому же адресу можно обращаться и к памяти и к устройствам одновременно
3.Порт это условный номер устройства на шине:
  Центральный процессор устанавливает на адресную шину номер устройства, после чего общается с ним через шину памяти.
4.Если память устройства отображена на адресное пространство основной памяти, то запись в память устройства можно выполнить теми же операциями, что и запись в память:
  В случае, когда нет специальных диапазонов адресов для ввода/вывода и нет назначеных портов, для ввода и вывода используются теже команды что и команды чтения и записи в память, тогда ввод/вывод может быть организован через память
 
Тест 4:
1.Прерывание это сигнал процессору о возникновении события, требующего обработки:
  Специальный сигнал оповещает процессор о каком-то внешнем событии, когда происходит прерывание процессор прекращает выполнение текущей задачи и переходит к обработчики прерывания
2.Процессор может одновременно выполнять приложение и обрабатывать прерывание
3.В вычислительной системе может быть организована обработка неограниченного числа прерываний
4.Программные прерывания являются синхронными:
  Синхронные прерывания как правило возникают внутри самого процессора и связаны с возникновением каких-то исключительных ситуаций
5.Асинхронные прерывания генерируются программами

Тест 5:

1.Номер прерывания позволяет выбрать обработчик прерываний:
  
2.Контроллер прерываний синхронизирует одновременно возникающие прерывания:
  
3.Контроллеры прерываний могут объединяться в каскадную схему:
  Если контактов контроллера прерывания не достаточно чтобы подключить все устройства компьютера к центральному процессору.
  Каждый контроллер прерывания имеет несколько входных линий, эти входные линии устроены точно так же, как входные линии прерывания центрального процессора,
  т.е каждый из них может быть снова подключен контроллер прерываний,
  получается каскадная конструкция где за одним контактом контроллера прерываний может скрываться несколько устройств подключенных к контроллеру прерывания следующего уровня
4.Номер прерывания совпадает с номером записи в таблице векторов прерываний:
  
5.Номер прерывания поступает через шину данных:
  